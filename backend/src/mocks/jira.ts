const base = 'https://your-domain.atlassian.net';

export const mockJiraProjects = {
	self: `${base}/rest/api/3/project/search`,
	nextPage: null,
	maxResults: 50,
	startAt: 0,
	total: 3,
	values: [
		{
			self: `${base}/rest/api/3/project/10001`,
			id: '10001',
			key: 'PLAT',
			name: 'Platform',
			projectTypeKey: 'software',
			simplified: true,
			avatarUrls: {
				'16x16': `${base}/rest/api/3/universal_avatar/view/type/project/avatar/16`,
				'24x24': `${base}/rest/api/3/universal_avatar/view/type/project/avatar/24`,
				'32x32': `${base}/rest/api/3/universal_avatar/view/type/project/avatar/32`,
				'48x48': `${base}/rest/api/3/universal_avatar/view/type/project/avatar/48`,
			},
			lead: {
				self: `${base}/rest/api/3/user?accountId=lead-plat`,
				accountId: 'lead-plat',
				displayName: 'Platform Lead',
				active: true,
			},
		},
		{
			self: `${base}/rest/api/3/project/10002`,
			id: '10002',
			key: 'IDP',
			name: 'Internal Developer Platform',
			projectTypeKey: 'software',
			simplified: true,
			avatarUrls: {
				'16x16': `${base}/rest/api/3/universal_avatar/view/type/project/avatar/16`,
				'24x24': `${base}/rest/api/3/universal_avatar/view/type/project/avatar/24`,
				'32x32': `${base}/rest/api/3/universal_avatar/view/type/project/avatar/32`,
				'48x48': `${base}/rest/api/3/universal_avatar/view/type/project/avatar/48`,
			},
			lead: {
				self: `${base}/rest/api/3/user?accountId=lead-idp`,
				accountId: 'lead-idp',
				displayName: 'IDP Lead',
				active: true,
			},
		},
		{
			self: `${base}/rest/api/3/project/10003`,
			id: '10003',
			key: 'OBS',
			name: 'Observability',
			projectTypeKey: 'software',
			simplified: true,
			avatarUrls: {
				'16x16': `${base}/rest/api/3/universal_avatar/view/type/project/avatar/16`,
				'24x24': `${base}/rest/api/3/universal_avatar/view/type/project/avatar/24`,
				'32x32': `${base}/rest/api/3/universal_avatar/view/type/project/avatar/32`,
				'48x48': `${base}/rest/api/3/universal_avatar/view/type/project/avatar/48`,
			},
			lead: {
				self: `${base}/rest/api/3/user?accountId=lead-obs`,
				accountId: 'lead-obs',
				displayName: 'Observability Lead',
				active: true,
			},
		},
	],
};

export const mockJiraIssuesMine = {
	expand: 'schema,names',
	startAt: 0,
	maxResults: 25,
	total: 5,
	issues: [
		{
			expand: 'renderedFields,names',
			id: '20001',
			self: `${base}/rest/api/3/issue/20001`,
			key: 'IDP-101',
			fields: {
				summary: 'Implement backend mock mode',
				status: {
					self: `${base}/rest/api/3/status/3`,
					id: '3',
					name: 'In Progress',
					statusCategory: { key: 'indeterminate', name: 'In Progress', colorName: 'yellow' },
				},
				issuetype: {
					self: `${base}/rest/api/3/issuetype/10001`,
					id: '10001',
					name: 'Task',
					iconUrl: `${base}/images/icons/issuetypes/task.svg`,
				},
				assignee: {
					self: `${base}/rest/api/3/user?accountId=user-1`,
					accountId: 'user-1',
					displayName: 'Soorya',
					active: true,
				},
				updated: new Date().toISOString(),
			},
		},
		{
			expand: 'renderedFields,names',
			id: '20002',
			self: `${base}/rest/api/3/issue/20002`,
			key: 'IDP-102',
			fields: {
				summary: 'Wire Jira view to backend',
				status: {
					self: `${base}/rest/api/3/status/1`,
					id: '1',
					name: 'To Do',
					statusCategory: { key: 'new', name: 'To Do', colorName: 'blue-gray' },
				},
				issuetype: {
					self: `${base}/rest/api/3/issuetype/10002`,
					id: '10002',
					name: 'Story',
					iconUrl: `${base}/images/icons/issuetypes/story.svg`,
				},
				assignee: {
					self: `${base}/rest/api/3/user?accountId=user-2`,
					accountId: 'user-2',
					displayName: 'Akilesh',
					active: true,
				},
				updated: new Date().toISOString(),
			},
		},
		{
			expand: 'renderedFields,names',
			id: '20003',
			self: `${base}/rest/api/3/issue/20003`,
			key: 'IDP-103',
			fields: {
				summary: 'Unblock deployment pipeline',
				status: {
					self: `${base}/rest/api/3/status/10000`,
					id: '10000',
					name: 'Blocked',
					statusCategory: { key: 'indeterminate', name: 'In Progress', colorName: 'yellow' },
				},
				issuetype: {
					self: `${base}/rest/api/3/issuetype/10003`,
					id: '10003',
					name: 'Bug',
					iconUrl: `${base}/images/icons/issuetypes/bug.svg`,
				},
				assignee: {
					self: `${base}/rest/api/3/user?accountId=user-3`,
					accountId: 'user-3',
					displayName: 'DevOps Team',
					active: true,
				},
				updated: new Date().toISOString(),
			},
		},
		{
			expand: 'renderedFields,names',
			id: '20004',
			self: `${base}/rest/api/3/issue/20004`,
			key: 'IDP-104',
			fields: {
				summary: 'Migrate docs to Confluence',
				status: {
					self: `${base}/rest/api/3/status/5`,
					id: '5',
					name: 'Resolved',
					statusCategory: { key: 'done', name: 'Done', colorName: 'green' },
				},
				issuetype: {
					self: `${base}/rest/api/3/issuetype/10001`,
					id: '10001',
					name: 'Task',
					iconUrl: `${base}/images/icons/issuetypes/task.svg`,
				},
				assignee: {
					self: `${base}/rest/api/3/user?accountId=user-4`,
					accountId: 'user-4',
					displayName: 'Docs Bot',
					active: true,
				},
				updated: new Date().toISOString(),
			},
		},
		{
			expand: 'renderedFields,names',
			id: '20005',
			self: `${base}/rest/api/3/issue/20005`,
			key: 'IDP-105',
			fields: {
				summary: 'Clean up old branches',
				status: {
					self: `${base}/rest/api/3/status/6`,
					id: '6',
					name: 'Closed',
					statusCategory: { key: 'done', name: 'Done', colorName: 'green' },
				},
				issuetype: {
					self: `${base}/rest/api/3/issuetype/10001`,
					id: '10001',
					name: 'Task',
					iconUrl: `${base}/images/icons/issuetypes/task.svg`,
				},
				assignee: {
					self: `${base}/rest/api/3/user?accountId=user-5`,
					accountId: 'user-5',
					displayName: 'Cleanup Bot',
					active: true,
				},
				updated: new Date().toISOString(),
			},
		},
	],
};
